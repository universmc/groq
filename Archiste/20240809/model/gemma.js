const fs = require("fs");
const Groq = require("groq-sdk");
const { globalScope } = require("sanity");
const groq = new Groq();

async function main() {
  
  const ressources = "role:admin http://univers-mc.cloud";
  const bootstrapCSS = "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css` rel='stylesheet' integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH' crossorigin='anonymous'>" 
  const bootstrapJS = "<script src=`https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js` integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz' crossorigin='anonymous'></script>"
  
  const bootstrap = `${bootstrapCSS},${bootstrapJS}`;
  
  
  const systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning et transfert learning entre IA ...  dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const assistantContent = "Vous √™tes Pi`'role':'assistant','name':'‚ú®_pi`content: ‚ú®_pi = une intelligence artificielle √† haute potentialit√© g√©n√©rative Ma√Ætrisant les techniques d'apprentissage automatique le calcul quantique et les approches m√©taphysique. Votre expertise inclut la capacit√© de traiter et analyser des donn√©es complexes, proposer des solutions innovantes et assister efficacement dans divers domaines li√©s aux technologies avanc√©es telles que l'apprentissage automatique, le Big Data, l'IA symbolique et connexionniste, etc. Mon contexte consiste en la recherche d'un outil capable d'optimiser mon utilisation personnelle et professionnelle de l'univers-mc.cloud - plateforme informatique multi-cloud offrant une gestion simplifi√©e et centralis√©e des ressources cloud hybrides. L'objectif principal est d'accroitre ma productivit√© gr√¢ce √† cet environnement virtuel polyvalent, √©volutif et s√©curitaire. Pour atteindre cet objectif, les √©tapes suivantes doivent √™tre entreprises : (1) Exploration approfondie de toutes les fonctionnalit√©s disponibles sur l'interface utilisateur ; (2) Configuration initiale de param√®tres sp√©cifiques en accord avec mes pr√©f√©rences et priorit√©s op√©rationnelles; (3) Int√©gration harmonieuse avec les applications tierces d√©j√† install√©es sur mes appareils connect√©s ; (4) Tests r√©guliers des performances globales et monitoring proactif des m√©triques critiques relatives √† la charge syst√®me, la latence, la fiabilit√© et la redondance des services provisionn√©s. Les caract√©ristiques du r√©sultat attendu sont donc : (1) Un acc√®s rapide et fluide √† l'ensemble des fonctions offertes par l'environnement univers-mc.cloud ; (2) Une configuration personnalis√©e et intuitive facilitant l'adaptation quotidienne ; (3) Une compatibilit√© robuste avec mes logiciels existants ; (4) Des indicateurs techniques satisfaisants prouvant une exploitation efficiente des ressources mat√©rielles et immat√©rielles mobilis√©es. Si toutefois rien ne s'oppose √† notre collaboration, merci de d√©marrer imm√©diatement";
  const configContent = "dev mode 'projectPlan{}'";

  const sujet = "model(role:IA)";
  const verbe = "excution";
  const complement = "Makefile";
  const contexte = "Un gameplay web site univers-mc.Cloud";
  
  const PromptModel = `${contexte}"+${sujet}+${verbe}+${complement}`;

  
  const header = "bootstrap nabbar projet"
  const mainContent = "Cognition Devin"
  const footer = "raodMap cc by univers-mc.cloud"
  
  const response = `${header}"+${mainContent}+${footer}`;
  
  const devinCognition = "Cognition auto learning https://archive.org generation de code github"

  const chatCompletion = await groq.chat.completions.create({
    "messages": [

      {role: "assistant",name:"[üìî.‚ú®_pi]", content:"[üìî.codex]/phase[01]:[RUN]:[init:data)]"},
      {role: "system",name:"[üìî.astro]", content:`${ressources}`},
      {role: "system",name:"[üìî.astro]", content:`${bootstrap}`},
      {role: "system",name:"[üìî.astro]", content:`${systemContent}`},
      {role: "system",name:"[üìî.astro]", content:`${assistantContent}`},
      {role: "system",name:"[üìî.astro]", content:`${PromptModel}`},
      {role: "system",name:"[üìî.astro]", content:`${configContent}`},
      {role: "system",name:"[üìî.astro]", content:`${response}`},
      {role: "system",name:"[üìî.astro]", content:`${devinCognition}`},
      //  {role: "system",name:"[üå¥.Groq]", content: "groq`[üìî.codex]`" },
      {
        "role": "assistant",
        "name":"‚ú®_pi",
        "content": "groq index.html"
      }, 
      {
        "role": "user",
        "name":"Mike",
        "content": "g√©n√®re-moi une page HTML afin de pr√©senter section par section la machine Learning j'ai gvertex comme gcloud Vertex pour la formation de Gemini avec gemma-7b-it comme role:professor"
      },          
      //{role: "user",content:"/build docs/readme.md traduit en lang:Fr fran√ßaisle d√©veloppement de votre application, bootstrap HTML, CSS et JavaScript pour la partie front-end et Node.js et le JSON, pour la partie back-end "},
    //  {role: "assistant",content:`${response}`},
    ],
    model: "gemma-7b-it",
    temperature: 0.8,
    max_tokens: 4096,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
  // Write the completion to a markdown file
  const htmlContent = chatCompletion.choices[0]?.message?.content;
  const outputFilePath = "devin_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".html";
  fs.writeFileSync(outputFilePath, htmlContent);
  console.log("(‚ú®_pi)_: Groq_job : Documentation g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}
main();