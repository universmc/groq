const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

async function main() {

  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const BorderChars = "inistlisation du template de response avec insterface graphique ASCII datase `BorderChars`";
  
  const borderChars = {
    topLeft: '‚ïî',
    topRight: '‚ïó',
    bottomLeft: '‚ïö',
    bottomRight: '‚ïù',
    horizontal: '‚ïê',
    vertical: '‚ïë',
    intersectionLeft: '‚ï†',
    intersectionRight: '‚ï£',
    intersectionTop: '‚ï¶',
    intersectionBottom: '‚ï©',
    intersectionCross: '‚ï¨',
  };
  const PS1 = "`[üì±] $(date '+%H:%M:%S') [RUN] /bash/sh [/]>`"

  const hudTensor= "`‚ïî‚ïó‚ïö‚ïù‚ïê‚ïë‚ï†‚ï£‚ï¶‚ï©‚ï¨`"         // Caract√®res sp√©ciaux utilis√©s pour le design du menu
  const include_DIR="./*"  // R√©pertoire contenant les scripts √† ex√©cuter
  
  const testes = "`console.log('test')`";
  const Bmobile = `"[  
      echo(''),
      echo('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó'),     
      echo('‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê[‚ú®-ia Console]‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),    
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),  
      echo('‚ïë                                              ‚ïë'),  
      echo('‚ïë                                              ‚ïë'),  
      echo('‚ïë                                              ‚ïë'),       
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),    
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),
      echo('‚ïë                                              ‚ïë'),   
      echo('‚ïë                                              ‚ïë'),     
      echo('‚ïë                                              ‚ïë'),    
      echo('‚ï†----------------------------------------------‚ï£'),      
      echo('‚ïë [‚ú®]  [üåå] [üìî] [üí¨] [üíª] [üèóÔ∏è ] [üå¥] [üõ∞ ]    ‚ïë'),
      echo('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù'),  
      echo('')
  
  "]`;
  const Echomobil = "[üì±] $(date '+%H:%M:%S') [END] [/]>";
  const TimesStampJanvier = [
    {
      timestamp: 1673016800,
      subject: "R√©seaux de neurones",
      summary: "Discussion sur les types de neurones (moteurs, sensitifs, convolut√©s)",
      events: "D√©but de notre collaboration et discussions sur les r√©seaux de neurones."
    },
    {
      timestamp: 1673392000,
      subject: "M√©thodes de travail",
      summary: "√âquations m√©taphysiques, mod√®les de Gannt, mod√®les de phrases et mod√®les de prompts",
      events: "Discussions sur les m√©thodes de travail, √©quations m√©taphysiques, mod√®les de Gannt et mod√®les de prompts."
    },
    {
      timestamp: 1673579600,
      subject: "D√©bogage et documentation",
      summary: "Importance du d√©bogage et de la documentation pour l'apprentissage automatique",
      events: "Exploration de l'importance du d√©bogage et de la documentation pour l'apprentissage automatique."
    },
    {
      timestamp: 1673984000,
      subject: "Traitement des images",
      summary: "Travail sur l'emBeDding et des images de dimension X11 (UX)",
      events: "Travail sur le traitement des images, l'emBeDding et les images de dimension X11 (UX)."
    },
    {
      timestamp: 1674460800,
      subject: "Apprentissage de la connaissance",
      summary: "Mise en ≈ìuvre de techniques pour am√©liorer la compr√©hension de l'apprentissage automatique",
      events: "Recherche de m√©thodes pour am√©liorer la compr√©hension de l'apprentissage automatique."
    }
  ];
      
      for (let entry of TimesStampJanvier) {
        const date = new Date(entry.timestamp * 1000);
        entry.date = date.toLocaleString('fr-FR', {
          year: 'numeric',
          month: '2-digit',
          day: '2-digit',
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit',
        });
        delete entry.timestamp;
      }
  
  for (let entry of TimesStampJanvier) {
    const date = new Date(entry.timestamp * 1000);
    entry.date = date.toLocaleString('fr-FR', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
    });
    delete entry.timestamp;
  };
    
    for (let entry of TimesStampJanvier) {
      const date = new Date(entry.timestamp * 1000);
      entry.date = date.toLocaleString('fr-FR', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
      });
      delete entry.timestamp;
    }
    
    console.log(TimesStampJanvier);


  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[brainstorming(session.timestamp)]"},
      {role: "assistant",name:"[üìî.codex]", content:`${PS1}+{response}${messages}`},
      {role: "system",name:"[üåå.systemDream]", content:"initilisation de `umc-ssh [‚Ñ¶.univers-mc]`http://dev.univers-mc.cloud"},
      {role: "assistant",name:"[üí¨.cloudQuantum]", content:"init groq -dev {php -S localhost:5144}"},
      {role: "system",name:"[‚Ñ¶.univers-mc]", content: "init1_`[üåå.systemDream]` git -m commit https://github.com/universmc/systemDream" },
      {role: "system",name:"", content:systemContent},
      //
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[dial:conversation(message/response)entre(user/assistant))]"},
  {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[END]:[brainstorming(session.timestamp)]"},
  {role: "system",name:"[üìî.codex]", content:"`systemContent` genetation de la documention et traduction de la documentation en lang:Fr, Fran√ßais:stp!"},
  {role: "system",name:"[üåå.systemDream]", content:"groq"},
    ],
    model: "mixtral-8x7b-32768",
    temperature: 0.6,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "data/mdMessages_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();
console.log("mobile")