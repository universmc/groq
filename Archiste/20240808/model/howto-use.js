const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

const borderChars = {
    topLeft: '‚ïî',
    topRight: '‚ïó',
    bottomLeft: '‚ïö',
    bottomRight: '‚ïù', 
    horizontal: '‚ïê',
    vertical: '‚ïë',
    intersectionLeft: '‚ï†',
    intersectionRight: '‚ï£',
    intersectionTop: '‚ï¶',
    intersectionBottom: '‚ï©',
    intersectionCross: '‚ï¨',
  };


async function main() {

  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences,pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const BorderChars = "inistlisation du template de response avec insterface graphique ASCII datase `BorderChars`";
  const chatCompletion = await groq.chat.completions.create({
    "messages": [
      {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[brainstorming(session.timestamp_unix [DATE])]"},
      {role: "assistant",name:"[üìî.codex]", content:"phase[01-1]: Bonjour bienvenu le cours magistral sur le langage de programmation Metaphysique quantum grog-sdk [üå¥.Groq], traduit en lang=Fr fran√ßais"},
      {role: "user",name:"[üå¥.userGroq]", content: "Pour rendre cours plus dynamique nous int√©grons int√©raction des dial:[üí¨$messages] entre le role:user(moi-meme) et role:assistant,name:[üìî.codex] posant des questions($?) sur les Techniques d'apprentissage automatique afin de rendre le cours plus dynamique, en plus nous ajouterons des [ü§ñ]_emoji-intelligent projet huggingFace!" },
      {role: "system",name:"groq", content:`
      {
        "howto programming in groq": [
        {
        "description": "Apprendre les concepts de base",
        "details": [
          "D√©marrer avec la compr√©hension des principes de base du langage",
          "√âtudier la syntaxe, les types de donn√©es et les structures de contr√¥le"
        ]
      },
      {
        "description": "√âtudier les exemples",
        "details": [
          "Examiner des exemples existants",
          "Comprendre les fonctionnalit√©s et la syntaxe de Groq-sdk"
        ]
      },
        {
        "description": "Pratiquer la programmation",
        "details": [
        "Mettre en pratique les connaissances acquises",
        "√âcrire du code Grog pour r√©soudre des probl√®mes ou r√©aliser des t√¢ches sp√©cifiques"
        ]
        },
        {
          "description": "Ma√Ætriser les fonctionnalit√©s avanc√©es",
          "details": [
            "Explorer les fonctionnalit√©s avanc√©es de Groq-sdk",
            "√âtudier les fonctions, les classes et les modules",
            "Cr√©er des programmes plus complexes"
          ]
        },
        {
          "description": "Partager et recevoir des commentaires",
          "details": [
            "Partager votre code avec la communaut√© Groq-sdk",
            "Demander des commentaires et des conseils pour am√©liorer vos comp√©tences et votre code"
        ]
      }
    ]
  }
      `},
      {role: "assistant",name:"[üìî.codex]", content:"phase[01-2]:[RUN]:[redigez moi le cours magistral Avec des exemples de script, des opportunit√©es de mise en application incluant des descriptions d√©taill√©es en question)]"},

      // trainning ascii interface response

      
      //  {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[RUN]:[dial:conversation(message/response)entre(user/assistant))]"},
      //  {
        //    "role": "system",
        //    "content": "[zira]"
        //  },
    //  {
    //    "role": "user",
    //    "content": "[content]:template.response"
    //  },
    //  {
    //    "role": "assistant",
    //    "content": "groq response"
    //  },
    //  {role: "assistant",name:"[üìî.codex]", content:"phase[01]:[END]:[brainstorming(session.timestamp)]"},
    //  {role: "system",name:"[üìî.codex]", content:"`systemContent` genetation de la documention et traduction de la documentation en lang:Fr, Fran√ßais:stp!"},
    //  {role: "system",name:"[üåå.systemDream]", content:"groq"},
    ],
    model: "mixtral-8x7b-32768",
    temperature: 0.7,
    max_tokens: 4096,
    top_p: 1,
    stop: null,
    stream: false
}).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "HowTo-groq_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();